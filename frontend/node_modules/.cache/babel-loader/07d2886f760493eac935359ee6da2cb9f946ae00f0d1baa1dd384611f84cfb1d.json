{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nimport Papa from 'papaparse';\nconst API_KEY = 'df8ac1596af93be66dd5bffa4fbc8889';\n//const BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\n//const mapKey = 'e9b71104463f4639ddf682844d4b0dd1';\n\nexport const fetchFireData = async mapKey => {\n  const url = `https://firms.modaps.eosdis.nasa.gov/api/country/csv/e9b71104463f4639ddf682844d4b0dd1/MODIS_NRT/USA/7`;\n  try {\n    const response = await axios.get(url, {\n      responseType: 'blob' // Important: Handle CSV data as a Blob\n    });\n    return new Promise((resolve, reject) => {\n      Papa.parse(response.data, {\n        header: true,\n        complete: results => {\n          const data = results.data.map(item => ({\n            ...item,\n            acq_datetime: moment(item.acq_date + ' ' + item.acq_time.padStart(4, '0'), 'YYYY-MM-DD HHmm').toDate()\n          }));\n          resolve(data);\n        },\n        error: error => reject(error)\n      });\n    });\n  } catch (error) {\n    console.error('Error fetching fire data:', error);\n  }\n};\nexport const fetchWeatherData = async (city, API_KEY) => {\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=imperial`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n};\n\n//export default fetchWeatherData;","map":{"version":3,"names":["axios","moment","Papa","API_KEY","fetchFireData","mapKey","url","response","get","responseType","Promise","resolve","reject","parse","data","header","complete","results","map","item","acq_datetime","acq_date","acq_time","padStart","toDate","error","console","fetchWeatherData","city"],"sources":["C:/Users/carog/tic-tac-toe/frontend/src/WeatherService.js"],"sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\nimport Papa from 'papaparse';\n\nconst API_KEY = 'df8ac1596af93be66dd5bffa4fbc8889';\n//const BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\n//const mapKey = 'e9b71104463f4639ddf682844d4b0dd1';\n\nexport const fetchFireData = async (mapKey) => {\n  const url = `https://firms.modaps.eosdis.nasa.gov/api/country/csv/e9b71104463f4639ddf682844d4b0dd1/MODIS_NRT/USA/7`;\n  try {\n      const response = await axios.get(url, {\n          responseType: 'blob'  // Important: Handle CSV data as a Blob\n      });\n\n      return new Promise((resolve, reject) => {\n          Papa.parse(response.data, {\n              header: true,\n              complete: (results) => {\n                  const data = results.data.map(item => ({\n                      ...item,\n                      acq_datetime: moment(item.acq_date + ' ' + item.acq_time.padStart(4, '0'), 'YYYY-MM-DD HHmm').toDate()\n                  }));\n                  resolve(data);\n              },\n              error: (error) => reject(error)\n          });\n      });\n  } catch (error) {\n      console.error('Error fetching fire data:', error);\n  }\n};\n\nexport const fetchWeatherData = async (city, API_KEY) => {\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=imperial`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n};\n\n//export default fetchWeatherData;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,IAAI,MAAM,WAAW;AAE5B,MAAMC,OAAO,GAAG,kCAAkC;AAClD;;AAEA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC7C,MAAMC,GAAG,GAAG,uGAAuG;EACnH,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACF,GAAG,EAAE;MAClCG,YAAY,EAAE,MAAM,CAAE;IAC1B,CAAC,CAAC;IAEF,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCV,IAAI,CAACW,KAAK,CAACN,QAAQ,CAACO,IAAI,EAAE;QACtBC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAGC,OAAO,IAAK;UACnB,MAAMH,IAAI,GAAGG,OAAO,CAACH,IAAI,CAACI,GAAG,CAACC,IAAI,KAAK;YACnC,GAAGA,IAAI;YACPC,YAAY,EAAEnB,MAAM,CAACkB,IAAI,CAACE,QAAQ,GAAG,GAAG,GAAGF,IAAI,CAACG,QAAQ,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAACC,MAAM,CAAC;UACzG,CAAC,CAAC,CAAC;UACHb,OAAO,CAACG,IAAI,CAAC;QACjB,CAAC;QACDW,KAAK,EAAGA,KAAK,IAAKb,MAAM,CAACa,KAAK;MAClC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAOC,IAAI,EAAEzB,OAAO,KAAK;EACvD,MAAMG,GAAG,GAAG,qDAAqDsB,IAAI,UAAUzB,OAAO,iBAAiB;EACvG,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACF,GAAG,CAAC;IACrC,OAAOC,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}