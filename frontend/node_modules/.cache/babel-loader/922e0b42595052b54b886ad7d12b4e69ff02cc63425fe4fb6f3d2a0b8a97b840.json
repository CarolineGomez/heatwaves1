{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\n\n//const API_KEY = 'c1a2f74d2e7ee1d23d0dfe61900c4e61';\n//const BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\nconst mapKey = 'e9b71104463f4639ddf682844d4b0dd1';\nexport const fetchFireData = async mapKey => {\n  const url = `https://firms.modaps.eosdis.nasa.gov/api/country/csv/${mapKey}/MODIS_NRT/USA/7`;\n  try {\n    const response = await axios.get(url);\n    const data = response.data.map(item => ({\n      ...item,\n      acq_datetime: moment(item.acq_date + ' ' + item.acq_time.padStart(4, '0'), 'YYYY-MM-DD HHmm').toDate()\n    }));\n    return data;\n  } catch (error) {\n    console.error('Error fetching fire data:', error);\n  }\n};\nexport const fetchWeatherData = async city => {\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c1a2f74d2e7ee1d23d0dfe61900c4e61&units=imperial`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n};\n\n//export default fetchWeatherData;","map":{"version":3,"names":["axios","moment","mapKey","fetchFireData","url","response","get","data","map","item","acq_datetime","acq_date","acq_time","padStart","toDate","error","console","fetchWeatherData","city"],"sources":["C:/Users/carog/tic-tac-toe/src/WeatherService.js"],"sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\n\n//const API_KEY = 'c1a2f74d2e7ee1d23d0dfe61900c4e61';\n//const BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\nconst mapKey = 'e9b71104463f4639ddf682844d4b0dd1';\n\nexport const fetchFireData = async (mapKey) => {\n  const url = `https://firms.modaps.eosdis.nasa.gov/api/country/csv/${mapKey}/MODIS_NRT/USA/7`;\n  try {\n      const response = await axios.get(url);\n      const data = response.data.map(item => ({\n          ...item,\n          acq_datetime: moment(item.acq_date + ' ' + item.acq_time.padStart(4, '0'), 'YYYY-MM-DD HHmm').toDate()\n      }));\n      return data;\n  } catch (error) {\n      console.error('Error fetching fire data:', error);\n  }\n};\n\nexport const fetchWeatherData = async (city) => {\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c1a2f74d2e7ee1d23d0dfe61900c4e61&units=imperial`;\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n  }\n};\n\n//export default fetchWeatherData;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;;AAE3B;AACA;;AAEA,MAAMC,MAAM,GAAG,kCAAkC;AAEjD,OAAO,MAAMC,aAAa,GAAG,MAAOD,MAAM,IAAK;EAC7C,MAAME,GAAG,GAAG,wDAAwDF,MAAM,kBAAkB;EAC5F,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACF,GAAG,CAAC;IACrC,MAAMG,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;MACpC,GAAGA,IAAI;MACPC,YAAY,EAAET,MAAM,CAACQ,IAAI,CAACE,QAAQ,GAAG,GAAG,GAAGF,IAAI,CAACG,QAAQ,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAACC,MAAM,CAAC;IACzG,CAAC,CAAC,CAAC;IACH,OAAOP,IAAI;EACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC9C,MAAMd,GAAG,GAAG,qDAAqDc,IAAI,wDAAwD;EAC7H,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACF,GAAG,CAAC;IACrC,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}